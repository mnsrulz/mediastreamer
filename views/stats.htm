<!DOCTYPE html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <style>
        [v-cloak]>* {
            display: none
        }

        [v-cloak]::before {
            content: "Loading…"
        }
    </style>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"
        integrity="sha512-894YE6QWD5I59HgZOGReFYm4dnWc1Qt5NtvYSaNcOP+u1T9qYdvdihz0PPSiiqn/+/3e7Jo4EaG7TubfWGUrMQ=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/semantic-ui@2.4.1/dist/semantic.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css"
        integrity="sha512-8bHTC73gkZ7rZ7vpqUQThUDhqcNFyYi2xgDgPDHc+GXVGHXq+xPjynxIopALmOPqzo9JZj0k6OqqewdGO3EsrQ=="
        crossorigin="anonymous" />

    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <link rel="stylesheet" type="text/css"
        href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
    <link href="https://unpkg.com/video.js/dist/video-js.min.css" rel="stylesheet">
    <script src="https://unpkg.com/video.js/dist/video.min.js"></script>
    <style>
        #app-loader {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            background: rgba(255, 255, 255, 0.95);
            z-index: 2000;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2em;
        }
    </style>
</head>

<body>
    <div id="app-loader">
        <div class="ui active dimmer">
            <div class="ui large text loader">Loading app…</div>
        </div>
    </div>
    <script type="module">
        import { createApp } from 'https://unpkg.com/vue@3/dist/vue.esm-browser.prod.js';
        import { vm } from "./js/app.js";

        const app = createApp(vm);
        app.mount('#app');
        document.getElementById('app-loader').style.display = 'none';

        $('.ui.buttons .button')
            .on('click', function () {
                $(this).addClass('active').siblings().removeClass('active');
            });
    </script>
    <div id="app" v-cloak style="margin-top: 50px;">
        <div class="ui stackable grid container">
            <!-- Sidebar -->
            <div class="sixteen wide mobile four wide tablet four wide computer column">
                <div class="ui segment">
                    <div id="add-button-container" style="margin-bottom: 1em;">
                        <button class="ui compact icon button" @click="showAddItemModal"
                            :disabled="mediaItems.length <= 1">
                            <i class="search icon"></i>
                        </button>
                    </div>

                    <div class="ui link list fluid">
                        <template v-if="items && items.length > 0">
                            <template v-for="item in items">
                                <div v-if="item.imdbId === selectedImdbId && item.size === selectedItemSize"
                                    class="item active">
                                    <div class="ui grid">
                                        <div class="twelve wide column">
                                            <strong>{{ item.imdbId }}</strong>
                                            <span class="ui mini label">{{ getSizeId(item.size) }}</span>
                                        </div>
                                    </div>
                                </div>
                                <a v-else class="item" @click="setSelectedImdbId(item.imdbId, item.size)">
                                    <div class="ui grid">
                                        <div class="twelve wide column">
                                            <strong>{{ item.imdbId }}</strong>
                                            <span class="ui mini label">{{ getSizeId(item.size) }}</span>
                                        </div>
                                    </div>
                                </a>
                            </template>
                        </template>
                        <template v-else>
                            <div class="item">zero items found</div>
                        </template>
                    </div>
                </div>
            </div>

            <!-- Main Content -->
            <div class="sixteen wide mobile twelve wide tablet twelve wide computer stretched column">
                <div class="ui segment">
                    <button class="ui primary button" style="margin-bottom: 0.5em;" @click="openRangeDialog"
                        :disabled="!selectedImdbId">
                        Request Range
                    </button>
                    <button class="ui primary button" style="margin-bottom: 1em;"
                        @click="playVideo(selectedImdbId, selectedItemSize)" :disabled="!selectedImdbId">
                        Play Video
                    </button>

                    <!-- Range Modal -->
                    <div v-if="showRangeDialog">
                        <div class="ui page modals dimmer transition visible active" style="z-index: 1000;"></div>
                        <div class="ui tiny modal active visible" style="display: block; z-index: 1100;">
                            <div class="header">Request Range for {{ selectedImdbId }}</div>
                            <div class="content">
                                <form class="ui form" @submit.prevent="submit">
                                    <div class="field">
                                        <label>Start</label>
                                        <input type="number" v-model.number="rangeStart" min="0"
                                            :max="selectedItem?.size" required />
                                    </div>
                                    <div class="field">
                                        <label>End</label>
                                        <input type="number" v-model.number="rangeEnd" :min="rangeStart"
                                            :max="selectedItem?.size" required />
                                    </div>
                                    <div class="actions">
                                        <button type="submit" class="ui positive button">Submit</button>
                                        <button type="button" class="ui button"
                                            @click="closeRangeDialog">Cancel</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>

                    <!-- Item Card -->
                    <div v-if="selectedItem" class="ui card" style="margin-bottom: 1em;">
                        <div class="content">
                            <div class="header">{{ selectedItem.imdbId }}</div>
                            <div class="meta">
                                Size: <strong>{{ selectedItem.sizeHuman }}</strong>
                                ({{ selectedItem.size.toLocaleString() }} bytes)
                            </div>
                            <div class="description">
                                <div class="ui list">
                                    <div class="item"><strong>Created:</strong> {{
                                        dayjs(selectedItem.created).fromNow() }}</div>
                                    <div class="item"><strong>Last Used:</strong> {{
                                        dayjs(selectedItem.lastUsed).fromNow() }}</div>
                                    <div class="item"><strong>Number of Streams:</strong> {{
                                        selectedItem.numberOfStreams }}</div>
                                    <div class="item"><strong>Number of Active Requests:</strong> {{
                                        selectedItem.activeRequests.length }}</div>
                                    <div class="item"><strong>Buffer Array Length:</strong> {{
                                        selectedItem.bufferArrayLength }}</div>
                                    <div class="item"><strong>Buffer Array Size:</strong> {{
                                        selectedItem.bufferArraySize }}</div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div v-html="plotChart"></div>

                    <!-- Streams -->
                    <div v-if="selectedItem && selectedItem.streamStats && selectedItem.streamStats.length > 0"
                        class="ui segment">
                        <h4 class="ui header">Streams</h4>
                        <div class="ui relaxed divided list">
                            <div class="item" v-for="(stream, idx) in selectedItem.streamStats" :key="idx">
                                <div class="ui grid">
                                    <div class="sixteen wide mobile eight wide computer column">
                                        <div><strong>Host:</strong> {{ stream.sourceHost }}</div>
                                        <div><strong>Start Position:</strong> {{ stream.startPositionHuman }} ({{
                                            stream.startPosition }})</div>
                                        <div><strong>Current Position:</strong> {{ stream.currentPositionHuman }} ({{
                                            stream.currentPosition }})</div>
                                        <div><strong>Last Reader Position:</strong> {{ stream.lastReaderPositionHuman }}
                                            ({{ stream.lastReaderPosition }})</div>
                                        <div><strong>Last Used:</strong> <span :title="stream.lastUsed">{{
                                                stream.lastUsedAgo }} ({{ new
                                                Date(stream.lastUsed).toLocaleString() }})</span></div>
                                        <div>
                                            <button class="ui mini red button" @click="drainStream(stream.streamId)">Drain it</button>
                                        </div>
                                    </div>
                                    <div class="sixteen wide mobile eight wide computer column">
                                        <div>
                                            <!-- <strong>Status:</strong>
                                            <span :class="['ui label', stream.isGoodStream ? 'green' : 'red']">
                                                {{ stream.isGoodStream ? 'Good' : 'Bad' }}
                                            </span> -->
                                            <span class="ui label"
                                                :class="stream.hasHealthyBuffer ? 'green' : 'orange'">
                                                Buffer: {{ stream.hasHealthyBuffer ? 'Healthy' : 'Low' }}
                                            </span>
                                            <span class="ui label" :class="stream.drainRequested ? 'red' : 'blue'">
                                                Drain Requested: {{ stream.drainRequested ? 'Requested' : 'No' }}
                                            </span>
                                            <span class="ui label"
                                                :class="stream.readAheadExceeded ? 'orange' : 'grey'">
                                                Read Ahead: {{ stream.readAheadExceeded ? 'Exceeded' : 'No' }}
                                            </span>
                                            <!-- <span class="ui label"
                                                :class="stream.slowStreamHandled ? 'yellow' : 'grey'">
                                                Slow: {{ stream.slowStreamHandled ? 'Handled' : 'Normal' }}
                                            </span> -->
                                        </div>
                                        <div style="margin-top: 0.5em;">
                                            <strong>Speed:</strong>
                                            <span class="ui mini label">Current: {{ stream.speedStats.currentSpeedHuman
                                                }}</span>
                                            <span class="ui mini label">Avg: {{ stream.speedStats.cumulativeSpeedHuman
                                                }}</span>
                                        </div>
                                        <div v-if="stream.lastReadAheadExceededTime">
                                            <small>Last Read Ahead Exceeded:
                                                <span :title="stream.lastReadAheadExceededTime">
                                                    {{ new Date(stream.lastReadAheadExceededTime).toLocaleString() }}
                                                </span>
                                            </small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div v-else-if="selectedItem">
                        <div class="ui message">No streams found for this item.</div>
                    </div>
                    <!-- Active Requests -->
                    <div v-if="selectedItem && selectedItem.activeRequests && selectedItem.activeRequests.length > 0"
                        class="ui segment">
                        <h4 class="ui header">Active Requests</h4>
                        <div class="ui relaxed divided list">
                            <div class="item" v-for="(activeRequest, idx) in selectedItem.activeRequests" :key="idx">
                                <div class="ui grid">
                                    <div class="sixteen wide mobile eight wide computer column">
                                        <div><strong>Request Id:</strong> {{ activeRequest.requestId }}</div>
                                        <div><strong>Created:</strong> {{ dayjs(activeRequest.created).fromNow() }}
                                        </div>
                                        <div><strong>Last Used:</strong> {{ dayjs(activeRequest.lastUsed).fromNow() }}
                                        </div>
                                        <div><strong>Bytes Consumed:</strong> {{
                                            prettyBytes(activeRequest.bytesConsumed) }}</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div v-else-if="selectedItem">
                        <div class="ui message">No active requests found for this item.</div>
                    </div>
                </div>
            </div>

            <!-- Search Modal -->
            <div class="ui search-media-item modal">
                <div class="header">Search Item</div>
                <div class="content">
                    <div class="ui form">
                        <div class="ui search">
                            <div class="ui fluid icon input">
                                <input class="prompt" type="text" placeholder="Search items..." />
                                <i class="search icon"></i>
                            </div>
                            <div class="results"></div>
                        </div>
                        <div v-if="selectedMediaItem" class="ui relaxed divided list scrolling content">
                            <template v-if="searchItemResult && searchItemResult.length > 0">
                                <template v-for="item in searchItemResult">
                                    <div class="item">
                                        <i class="large play middle aligned link icon"
                                            @click="playVideo(item.imdbId, item.size)"></i>
                                        <div class="content">
                                            <span class="header">{{ item.title }}</span>
                                            <div class="description">{{ item.domains.join(', ') }} ({{ item.count }})</div>
                                        </div>
                                    </div>
                                </template>
                            </template>
                            <template v-else>
                                <div class="item">nothing</div>
                            </template>
                        </div>
                    </div>
                </div>
                <div class="actions">
                    <div class="ui negative button">Cancel</div>
                </div>
            </div>

            <!-- Video Modal -->
            <div class="ui video-player-modal modal">
                <div class="header">Video</div>
                <div class="content">
                    <div v-show="showVideoPlayer">
                        <video ref="videoPlayer" playsinline controls class="video-js video-player" preload="auto">
                            <p class="vjs-no-js">
                                To view this video please enable JavaScript, and consider upgrading to a
                                web browser that
                                <a href="https://videojs.com/html5-video-support/" target="_blank">supports HTML5
                                    video</a>
                            </p>
                        </video>
                    </div>
                </div>
                <div class="actions">
                    <div class="ui negative button">Cancel</div>
                </div>
            </div>
        </div>
    </div>

    <style>
        .video-player {
            height: 420px;
            width: 100%;
        }

        @media (max-width: 767px) {
            .ui.modal {
                top: 0 !important;
                left: 0 !important;
                margin: 0 !important;
                width: 100% !important;
                height: 100% !important;
                max-height: 100% !important;
                border-radius: 0 !important;
            }

            .ui.modal>.content {
                height: calc(100% - 100px);
                /* leave room for header + actions */
                overflow-y: auto;
                /* scroll if content is taller */
            }

            .video-player {
                height: 240px;
            }
        }



        /* Scroll for long lists */
        .ui.relaxed.divided.list.scrolling.content {
            max-height: 300px;
            overflow-y: auto;
        }
    </style>

</body>

</html>